% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opsDesign.R
\name{updateOpsLibrary}
\alias{updateOpsLibrary}
\title{Update OPS library with additional gRNAs}
\usage{
updateOpsLibrary(
  opsLibrary,
  guideSet,
  n_cycles = 9,
  rt_direction = c("5prime", "3prime"),
  n_guides = 4,
  gene_field = "gene",
  min_dist_edit = 2,
  dist_method = c("hamming", "levenshtein"),
  splitByChunks = FALSE
)
}
\arguments{
\item{opsLibrary}{GuideSet obtained from \code{designOpsLibrary}.}

\item{guideSet}{GuideSet containing additional
candidate gRNAs to add to the OPS library.}

\item{n_cycles}{Integer specifying the number of sequencing 
cycles used in the in situ sequencing. This effectively
determines the length of the barcodes to be used for
sequencing.}

\item{rt_direction}{String specifying from which direction
the reverse transcription of the gRNA spacer sequence
will occur. Must be either "5prime" or "3prime".
"5prime" by default.}

\item{n_guides}{Integer specifying how many gRNAs per
gene should be selected. 4 by default.}

\item{gene_field}{String specifying the column in \code{mcols(guideSet)}
specifying gene names.}

\item{min_dist_edit}{Integer specifying the minimum distance edit
required for barcodes to be considered dissimilar. Barcodes that
have edit distances less than the min_dist_edit will not be
included in the library. 2 by default.}

\item{dist_method}{String specifying distance method. 
Must be either "hamming" (default) or "levenshtein".}

\item{splitByChunks}{Should distances be calculated in a chunk-wise
manner? FALSE by default. Highly recommended when the set of query
barcodes is large to reduce memory footprint.}
}
\value{
A GuideSet object containing the original gRNAs from 
   the input \code{opsLibrary} object as well as additional
   gRNAs selected from the input \code{guideSet}.
}
\description{
Update OPS library with additional gRNAs
}
\examples{
data(guideSetExample, package="crisprDesign")
guideSet <- unique(guideSetExample)
gs1 <- guideSet[1:200]
gs2 <- guideSet[201:400]

# Creating mock gene:
gs1$gene <- rep(paste0("gene",1:10),each=20)
gs2$gene <- rep(paste0("gene",1:10+10),each=20)
gs1$rank <- rep(1:20,10)
gs2$rank <- rep(1:20,10)
opsLib <- designOpsLibrary(gs1)
opsLib <- updateOpsLibrary(opsLib, gs2)

}
\author{
Jean-Philippe Fortin
}
